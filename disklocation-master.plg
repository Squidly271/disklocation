<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name             "disklocation">
<!ENTITY author           "Ole-Henrik Jakobsen">
<!ENTITY version          "2019.06.03">
<!ENTITY launch           "Settings/&name;">
<!ENTITY packageGIT       "https://github.com/olehj/disklocation.git">
<!ENTITY branch           "master">
<!ENTITY pluginURL        "https://raw.githubusercontent.com/olehj/&name;/&branch;/&name;-&branch;.plg">
<!ENTITY packagefile      "&name;.&version;.tar.bz2">
<!ENTITY pluginLOC        "/boot/config/plugins/&name;">
<!ENTITY emplugLOC        "/usr/local/emhttp/plugins">
<!ENTITY emhttpLOC        "&emplugLOC;/&name;">
<!ENTITY pluginsupportURL "https://forums.unraid.net/topic/77302-plugin-disk-location/">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         launch="&launch;"
         pluginURL="&pluginURL;"
	 min="6.6.0"
	 support="&pluginsupportURL;"
>

<FILE Name="/boot/packages/smartmontools-7.0-x86_64-1.txz" Run="upgradepkg --install-new" Max="6.6.9">
<URL>https://mirrors.slackware.com/slackware/slackware64-current/slackware64/a/smartmontools-7.0-x86_64-1.txz</URL>
<MD5>c5c852915332cd0984b040eeb545c43c</MD5>
</FILE>

<FILE Name="/boot/packages/git-2.14.5-x86_64-1_slack14.2.txz" Run="upgradepkg --install-new" Max="6.6.9">
<URL>http://mirrors.slackware.com/slackware/slackware64-14.2/patches/packages/git-2.14.5-x86_64-1_slack14.2.txz</URL>
<MD5>99ab6ab1d4685a81252893db01d63c5a</MD5>
</FILE>

<FILE Name="/boot/packages/git-2.21.0-x86_64-1.txz" Run="upgradepkg --install-new" Min="6.7.0" Max="6.7.1">
<URL>https://mirrors.slackware.com/slackware/slackware64-current/slackware64/d/git-2.21.0-x86_64-1.txz</URL>
<MD5>2f581b9d083b2a4e9c92255b5ea2eb26</MD5>
</FILE>

<CHANGES>
###2019.06.03
 - Commit #74 - IMPROVEMENT: Add debugging tools. Edit system.php and enable debugging: set "$debugging_active = 1;" The output will be shown directly and stored appended in /boot/config/plugins/disklocation/debugging.html

###2019.05.23
 - Commit #72 - BUG: Blank screen after installing, git not included afterall in 6.7.0/6.7.1-rc1. Will install git with the intended version before installing the plugin.

###2019.05.21
 - Commit #69 - IMPROVEMENT: Cleared up some UI issues. Made sure that trays can't be written over each other, the newest assigned device will overwrite the existing tray and put the device (if it exists) back in the unassigned table. Also my favorite commit number.

###2019.05.02
 - Commit #67 - MINOR ISSUE/FEATURE: Disk slot assignments dont save properly - removed some confusion for empty tables. Disabled the empty slots when the locations table is empty.

###2019.04.29
 - Commit #65 - MINOR ISSUE: Checks an array before counting it.
 - Removed disklocation.plg file: use disklocation-master.plg instead.

###2019.03.10
 - Commit #63 - BUG: Removed harddrives did not show up in the Information list but got invisible instead.
 - Commit #62 - MINOR ISSUE: Fix broken harddrive information. Parsing of lsscsi is redone.

###2019.03.09
 - Commit #60 - MINOR ISSUE: Warranty info is repeated for empty or non configured devices. Fixed by defining a variable as null.

###2019.03.08
 - Commit #58 - BUG: Invalid argument supplied for foreach(). Check if it is an array before searching in it, else default to false.

###2019.03.05
 - Updated the installer script to accept installations for Unraid 6.6.0 and above as earlier version does not support UPSERT in SQLite.

###2019.02.18b
 - Commit #53 - MINOR ISSUE: Found the actual line, checks for disksize value before calculating human readable size.

###2019.02.18
 - Commit #53 - MINOR ISSUE: Replaced single quote to double quote for the definitions.

###2019.02.14
 - Commit #51 - FEATURE: Added warranty left and comment options to be visible in the devices tab.

###2019.02.11
 - Added max version to the package installer so it won't downgrade the package by Slackware's logic of versioning for Unraid 6.7.

###2019.02.10
 - Commit #48 - BUG: Warning on faulty SQL statement, corrected.

###2019.02.09
 - Commit #46 - MINOR ISSUE: Warnings related to empty variables, will now check before parsing them.
 - Commit #44 - BUG: Looses allocations when pulling out a drive, probably caused because it still existed in the "location" table. Now it gets deleted. Also checks for an older reinserted device and modifies the status in the "disks" table.
 - Commit #43 - FEATURE: Added a checkbox for hiding contents of the "empty" trays.

###2019.02.04
 - Commit #41 - BUG: Parity and cache did not save values into the database.
 - Commit #40 - IMPROVEMENT: Javascript and style sources now wrapped with autov()

###2019.02.03
 - Commit #38 - BUG: Array checked before count()
 - Commit #37 - BUG: Disk allocations in config and info tab sorted by ID and not tray when "empty = 0"
 - Commit #36 - FEATURE: Added color choice for parity and cache devices.
 - Updated the Help page a bit with some new information.

###2019.02.02b
 - BUG: Installer script will automagically install or upgrade git packages for installation.

###2019.02.02
- Commit #33 - BUG: Settings not saved for fresh installs, fixed database query.
- IMPROVEMENT: installer to use git clone instead of a prebuilt archive. Current archive will be made for installation after reboots.

###2019.02.01
- Commit #31 - IMPROVEMENT: Created a new SHA256 string of static device model name and serial number instead of using LUN. Should now remember devices regardless of controllers. Require a database upgrade (v2).
- Commit #29 - BUG: Javascript: Added delay between kill and start/stop to the Locate button, should be more stable now. Thanks to TeeNoodle for debugging and testing.

###2019.01.31
- Commit #29 - BUG: Locate button acting weirdly, especially under Windows(?). Added escape and encode. Also modified the bash script.
- Commit #28 - MINOR ISSUE: break-variable missing from the Unraid LEDs.
- Commit #27 - BUG: added variables for new users so they don't see an empty page.

###2019.01.30b
- BUG: Devices shows no contents unless the selection is saved. By default show all.

###2019.01.30
- Commit #21 - FEATURE: Added options to select what to show at Devices page
- Commit #20 - FEATURE: Added temperature unit selection, C/F/K
- Commit #19 - BUG: Fixed HDD reported as SSD if rotation was 0
- FEATURE: You can now choose between Unraid version (select months: 12/24/36...) or Manual ISO dates (YYYY-MM-DD) in the warranty section, a config switch is required before this is accessible.
- Updated Help for new features.
- Database will be backed up during install because it will be upgraded.

###2019.01.28
- Commit #17 - IMPROVEMENT: Added slightly better support for 36 tray servers and in general override tray optimization.

###2019.01.23f
- Commit #15 - MINOR ISSUE: Empty horizontal trays not aligned correctly due to missing break.

###2019.01.23e
- Commit #13 - IMPROVEMENT: Use version from the installer in system.php
- Commit #12 - IMPROVEMENT: Plugin installer now removes older packages.
- Commit #11 - MINOR ISSUE: Warning message for Unraid 6.7+ due to empty array, now checking for content before issuing array_values()

###2019.01.23d
- Commit #9 - MINOR ISSUE, wrong version number stored in system.php.

###2019.01.23c
- Commit #7 - MINOR ISSUE: Fixed a minor design issue with the trays from the Device page nor showing correctly.

###2019.01.23b
- Commit #4 - BUG: Fixed a bug where PATH name didn't show on the Device page.
- Commit #3 - FEATURE: Added devicenode for unassigned devices where it exists.

###2019.01.23
- Commit #1 - BUG: Fixed a bug where device name and model became the same for all drives.
- MINOR ISSUE: Corrected minor fault in Help

###2019.01.22
- Initial Release
</CHANGES>

<!--
############################################
# Plugin Install script
############################################
-->
<FILE Name="/tmp/&name;-install" Run="/bin/bash">
<INLINE>
<!--
#################
# L O G I T
#################
-->
logit()
{
  <!--logger -trc.&name; -plocal7.info -is "$1"-->
  echo ""
  echo "$1"
}

DOWNLOAD_PKG="false"
INSTALL_PKG="false"

logit "Installing plugin..."

<!--# Create plugin folder if needed -->
if [ ! -d "&pluginLOC;" ] ; then
  logit "Creating plugin folder &pluginLOC;"
  mkdir -p "&pluginLOC;"
else
  logit "Plugin folder &pluginLOC; already exists"
fi

<!--# Check local package file -->
logit "Checking existing package &pluginLOC;/&packagefile;..."
if [ -f "&pluginLOC;/&packagefile;" ] ; then
  INSTALL_PKG="true"
else
  logit "Latest package does not exist &pluginLOC;/&packagefile;"
  DOWNLOAD_PKG="true"
fi

<!--# Download plugin files -->
if [ "$DOWNLOAD_PKG" == "true" ]; then
  <!--# Save existing packages until new package is downloaded OK -->
  logit "Saving any previous packages from &pluginLOC;"
  mkdir -p "/tmp/&name;-packages"
  TEMP="&pluginLOC;/&name;.*.tar.bz2"
  mv -f $TEMP "/tmp/&name;-packages"

  logit "Attempting to download plugin package &packageGIT;..."
  wget --quiet --spider --no-check-certificate --timeout=10 &packageGIT;
  if [ ! $? == "0" ] ; then
    logit "Package server down &packageGIT; - Plugin cannot install"
    INSTALL_PKG="false"
  else
    mkdir -p "/tmp/&name;-git"
    git clone --single-branch --branch &branch; &packageGIT; "/tmp/&name;-git"
    tar jcf "/tmp/&name;-git/&packagefile;" -C "/tmp/&name;-git" &name;
    mv "/tmp/&name;-git/&packagefile;" &pluginLOC;
    rm -rf "/tmp/&name;-git"
    if [ ! -f "&pluginLOC;/&packagefile;" ] ; then
      logit "Package download failed &packageGIT; - Plugin cannot install"
      INSTALL_PKG="false"
    else
      logit "Package &packagefile; downloaded to &pluginLOC;"
      INSTALL_PKG="true"
    fi
  fi
fi

if [ "$INSTALL_PKG" == "true" ] ; then
  logit "Extracting plugin package..."
  <!--# Remove current existing files -->
  [ -d "&emhttpLOC;" ] &amp;&amp; rm -fR "&emhttpLOC;"
  <!--# Extract files -->
  tar -jxf "&pluginLOC;/&packagefile;" -C "&emplugLOC;"
  <!--# Edit PAGE file  - Dynamically add version number -->
  if [ -f "&emhttpLOC;/&name;.page" ] ; then
    echo "Version=\"&version;\"" &gt;&gt; "&emhttpLOC;/&name;.page"
  fi
  <!--# Add locate bash script -->
  cat &gt;/usr/local/bin/smartlocate &lt;&lt;EOL
#!/bin/bash

# Simple hack to locate harddrives in hotswap arrays,
#   might not work on all drives or SSD's.
#
# Run: ./smartlocate [address]
#  Ex: ./smartlocate 8:0:0:0
#
# Check addresses available: ls -l /dev/bsg/
#
# Script needs to be interrupted: [CTRL]+[C]
#   or killed: pkill -f smartlocate
#
# Made by &author; &lt;ole@gidderikke.no&gt;

while sleep 0.5; do
  pkill -f smartctl &amp;&gt; /dev/null
  smartctl -x /dev/bsg/\&#36;1 &amp;&gt; /dev/null
done
EOL
  chmod +x /usr/local/bin/smartlocate
  
  rm -Rf "/tmp/&name;-packages"
  rm -f "/tmp/&name;-install"
  if [[ -f "&pluginLOC;/disklocation.sqlite" &amp;&amp; ! -f "&pluginLOC;/disklocation_db_v2.sqlite.tar.bz2" ]]; then
    tar jcf &pluginLOC;/disklocation_db_v2.sqlite.tar.bz2 &pluginLOC;/disklocation.sqlite
    logit "Made backup of database (&pluginLOC;/disklocation_db_v2.sqlite.tar.bz2) before it will be upgraded to version 3"
  fi
  logit "Plugin and Package file &packagefile; extracted and installed successfully"
  exit 0
else
  <!-- Revert back to previous packages -->
  if [ -f "&pluginLOC;/&packagefile;" ] ; then
    <!-- Remove bad SHA256 downloaded package if exists -->
    rm -f "&pluginLOC;/&packagefile;"
  fi
  logit "Reverting back to previously saved packages..."
  TEMP1="/tmp/&name;-packages"
  TEMP2=$(ls $TEMP1)
  if [ "$TEMP2" != "" ] ; then
    TEMP="/tmp/&name;-packages/&name;.*.tar.bz2"
    mv -f $TEMP "&pluginLOC;"
    logit "Previous packages restored"
  else
    logit "No previous packages to restored"
  fi
  rm -Rf "/tmp/&name;-packages"
  rm -f "/tmp/&name;-install"
  logit "Plugin install failed"
  exit 1
fi
</INLINE>
</FILE>

<!--
############################################
# plugin Remove method
############################################
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
logit()
{
  <!--logger -trc.&name; -plocal7.info -is "$1"-->
  echo "$1"
  echo ""
}

logit "Removing plugin..."
[ -f "/tmp/&name;-install" ] &amp;&amp; rm -f "/tmp/&name;-install"
[ -d "&emhttpLOC;" ] &amp;&amp; rm -fR "&emhttpLOC;"
[ -f "/usr/local/bin/smartlocate" ] &amp;&amp; rm -f "/usr/local/bin/smartlocate"
rm -f &pluginLOC;/disklocation.*.tar.bz2
logit "Plugin stopped and removed, package files removed from &pluginLOC;, database is not removed."
</INLINE>
</FILE>
</PLUGIN>
