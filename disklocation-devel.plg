<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name             "disklocation">
<!ENTITY author           "Ole-Henrik Jakobsen">
<!ENTITY version          "2019.02.03a-dev">
<!ENTITY launch           "Settings/&name;">
<!ENTITY packageGIT       "https://github.com/olehj/disklocation.git">
<!ENTITY branch           "devel">
<!ENTITY pluginURL        "https://raw.githubusercontent.com/olehj/&name;/&branch;/&name;-&branch;.plg">
<!ENTITY packagefile      "&name;.&version;.tar.bz2">
<!ENTITY pluginLOC        "/boot/config/plugins/&name;">
<!ENTITY emplugLOC        "/usr/local/emhttp/plugins">
<!ENTITY emhttpLOC        "&emplugLOC;/&name;">
<!ENTITY smartmontools    "smartmontools-7.0-x86_64-1.txz">
<!ENTITY smartmontoolsMD5 "c5c852915332cd0984b040eeb545c43c">
<!ENTITY gittools         "git-2.14.5-x86_64-1_slack14.2.txz">
<!ENTITY gittoolsMD5      "99ab6ab1d4685a81252893db01d63c5a">
<!ENTITY pluginsupportURL "https://forums.unraid.net/topic/77302-plugin-disk-location/">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         launch="&launch;"
         pluginURL="&pluginURL;"
	 support="&pluginsupportURL;"
>

<FILE Name="/boot/packages/&smartmontools;" Run="upgradepkg --install-new">
<URL>https://mirrors.slackware.com/slackware/slackware64-current/slackware64/a/&smartmontools;</URL>
<MD5>&smartmontoolsMD5;</MD5>
</FILE>

<FILE Name="/boot/packages/&gittools;" Run="upgradepkg --install-new">
<URL>http://mirrors.slackware.com/slackware/slackware64-14.2/patches/packages/&gittools;</URL>
<MD5>&gittoolsMD5;</MD5>
</FILE>

<CHANGES>
###Development releases
 - This package includes unstable development branch and should only be used for testing.
</CHANGES>

<!--
############################################
# Plugin Install script
############################################
-->
<FILE Name="/tmp/&name;-install" Run="/bin/bash">
<INLINE>
<!--
#################
# L O G I T
#################
-->
logit()
{
  <!--logger -trc.&name; -plocal7.info -is "$1"-->
  echo ""
  echo "$1"
}

DOWNLOAD_PKG="false"
INSTALL_PKG="false"

logit "Installing plugin..."

<!--# Create plugin folder if needed -->
if [ ! -d "&pluginLOC;" ] ; then
  logit "Creating plugin folder &pluginLOC;"
  mkdir -p "&pluginLOC;"
else
  logit "Plugin folder &pluginLOC; already exists"
fi

<!--# Check local package file -->
logit "Checking existing package &pluginLOC;/&packagefile;..."
if [ -f "&pluginLOC;/&packagefile;" ] ; then
  INSTALL_PKG="true"
else
  logit "Latest package does not exist &pluginLOC;/&packagefile;"
  DOWNLOAD_PKG="true"
fi

<!--# Download plugin files -->
if [ "$DOWNLOAD_PKG" == "true" ]; then

  <!--# Save existing packages until new package is downloaded OK -->
  logit "Saving any previous packages from &pluginLOC;"
  mkdir -p "/tmp/&name;-packages"
  TEMP="&pluginLOC;/&name;.*.tar.bz2"
  mv -f $TEMP "/tmp/&name;-packages"

  logit "Attempting to download plugin package &packageGIT;..."
  wget --quiet --spider --no-check-certificate --timeout=10 &packageGIT;
  if [ ! $? == "0" ] ; then
    logit "Package server down &packageGIT; - Plugin cannot install"
    INSTALL_PKG="false"
  else
    mkdir -p "/tmp/&name;-git"
    git clone --single-branch --branch &branch; &packageGIT; "/tmp/&name;-git"
    tar jcf "/tmp/&name;-git/&packagefile;" -C "/tmp/&name;-git" &name;
    mv "/tmp/&name;-git/&packagefile;" &pluginLOC;
    rm -rf "/tmp/&name;-git"
    if [ ! -f "&pluginLOC;/&packagefile;" ] ; then
      logit "Package download failed &packageGIT; - Plugin cannot install"
      INSTALL_PKG="false"
    else
      logit "Package &packagefile; downloaded to &pluginLOC;"
      INSTALL_PKG="true"
    fi
  fi
fi

if [ "$INSTALL_PKG" == "true" ] ; then
  logit "Extracting plugin package..."
  <!--# Remove current existing files -->
  [ -d "&emhttpLOC;" ] &amp;&amp; rm -fR "&emhttpLOC;"
  <!--# Extract files -->
  tar -jxf "&pluginLOC;/&packagefile;" -C "&emplugLOC;"
  <!--# Edit PAGE file  - Dynamically add version number -->
  if [ -f "&emhttpLOC;/&name;.page" ] ; then
    echo "Version=\"&version;\"" &gt;&gt; "&emhttpLOC;/&name;.page"
  fi
  <!--# Add locate bash script -->
  cat &gt;/usr/local/bin/smartlocate &lt;&lt;EOL
#!/bin/bash

# Simple hack to locate harddrives in hotswap arrays,
#   might not work on all drives or SSD's.
#
# Run: ./smartlocate [address]
#  Ex: ./smartlocate 8:0:0:0
#
# Check addresses available: ls -l /dev/bsg/
#
# Script needs to be interrupted: [CTRL]+[C]
#   or killed: pkill -f smartlocate
#
# Made by &author; &lt;ole@gidderikke.no&gt;

while sleep 0.5; do
  pkill -f smartctl &amp;&gt; /dev/null
  smartctl -x /dev/bsg/\&#36;1 &amp;&gt; /dev/null
done
EOL
  chmod +x /usr/local/bin/smartlocate
  
  rm -Rf "/tmp/&name;-packages"
  rm -f "/tmp/&name;-install"
  if [[ -f "&pluginLOC;/disklocation.sqlite" &amp;&amp; ! -f "&pluginLOC;/disklocation_db_v2.sqlite.tar.bz2" ]]; then
    tar jcf &pluginLOC;/disklocation_db_v2.sqlite.tar.bz2 &pluginLOC;/disklocation.sqlite
    logit "Made backup of database (&pluginLOC;/disklocation_db_v2.sqlite.tar.bz2) before it will be upgraded to version 3"
  fi
  logit "Plugin and Package file &packagefile; extracted and installed successfully"
  exit 0
else
  <!-- Revert back to previous packages -->
  if [ -f "&pluginLOC;/&packagefile;" ] ; then
    <!-- Remove bad SHA256 downloaded package if exists -->
    rm -f "&pluginLOC;/&packagefile;"
  fi
  logit "Reverting back to previously saved packages..."
  TEMP1="/tmp/&name;-packages"
  TEMP2=$(ls $TEMP1)
  if [ "$TEMP2" != "" ] ; then
    TEMP="/tmp/&name;-packages/&name;.*.tar.bz2"
    mv -f $TEMP "&pluginLOC;"
    logit "Previous packages restored"
  else
    logit "No previous packages to restored"
  fi
  rm -Rf "/tmp/&name;-packages"
  rm -f "/tmp/&name;-install"
  logit "Plugin install failed"
  exit 1
fi
</INLINE>
</FILE>

<!--
############################################
# plugin Remove method
############################################
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
logit()
{
  <!--logger -trc.&name; -plocal7.info -is "$1"-->
  echo "$1"
  echo ""
}

logit "Removing plugin..."
[ -f "/tmp/&name;-install" ] &amp;&amp; rm -f "/tmp/&name;-install"
[ -d "&emhttpLOC;" ] &amp;&amp; rm -fR "&emhttpLOC;"
[ -f "/usr/local/bin/smartlocate" ] &amp;&amp; rm -f "/usr/local/bin/smartlocate"
rm -f &pluginLOC;/disklocation.*.tar.bz2
logit "Plugin stopped and removed, package files removed from &pluginLOC;, database is not removed."
</INLINE>
</FILE>
</PLUGIN>
